name: Docker Image CI
on: [push, pull_request]

env:
  DOCKER_REPO: dysnix/github-actions-runner

jobs:
  build:
    name: Build Image Flavour
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        include:
          - flavour: default
          - flavour: onbuild
          - flavour: gcloud

    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: services1dysnix
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: oprypin/find-latest-tag@v1
        id: latestRunner
        with:
          repository: actions/runner

      - id: setup
        run: |
          latest_tag="${{ matrix.flavour }}"
          if [[ "$latest_tag" == "default" ]]; then latest_tag=latest; fi
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

          runner_version=${{ steps.latestRunner.outputs.tag }}
          echo "LATEST_RUNNER_VERSION=${runner_version#v}" >> $GITHUB_ENV

          # tag with the provided tag
          current_ref=${{ github.ref }}; current_ref=${current_ref##.*/}
          if [[ $current_ref =~ ^v ]]; then
            echo "DOCKER_IMAGE_TAG=${{ env.DOCKER_REPO }}:${current_ref}" >> $GITHUB_ENV
          fi

      ## Rebuilding previous runners (older tags) is not required,
      ## thus we always push the latest runner only
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.${{ matrix.flavour }}
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          tags: |
            ${{ env.DOCKER_IMAGE_TAG }}
            ${{ env.DOCKER_REPO }}:${{ steps.latestRunner.outputs.tag }}
            ${{ env.DOCKER_REPO }}:${{ env.LATEST_TAG }}
          build-args: |
            RUNNER_VERSION=${{ env.LATEST_RUNNER_VERSION }}
